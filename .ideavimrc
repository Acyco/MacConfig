"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrcer

" set leader key
nnoremap <SPACE> <Nop>
let mapleader = " "

" search
set hlsearch
set incsearch
set smartcase
set ignorecas
" plugins
set easymotion
set surround
set NERDTree
set which-key
" 在 normal 模式保持英文状态,并在回到 insert 时恢复输入法到原来的状态.例如,编写一段中文注释,用中文输入法写了一段文字,进入 normal 模式移动光标到下一行,再回到插入模式继续使用中文编辑.
" set keep-english-in-normal-and-restore-in-insert

" basic key mapping
set so=10
imap <C-b> <LEFT>
imap <C-f> <RIGHT>
imap <C-a> <Home>
imap <C-e> <End>

nnoremap L $
nnoremap H ^
vnoremap L $
vnoremap H ^
noremap ; :

" clear the highlighted search result
nnoremap <Leader>sc :nohlsearch<CR>

" Move half page faster
nnoremap <leader>d  <C-d>
nnoremap <leader>u  <C-u>

" Window operation
nnoremap <leader>ww <C-W>w
nnoremap <leader>wd <C-W>c
nnoremap <leader>wj <C-W>j
nnoremap <leader>wk <C-W>k
nnoremap <leader>wh <C-W>h
nnoremap <leader>wl <C-W>l
nnoremap <leader>ws <C-W>s
nnoremap <leader>w- <C-W>s
noremap <leader>wv <C-W>v
nnoremap <leader>w\| <C-W>v

" copy and paste
noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>P "0p
vnoremap Y "+y

" Tab operation
nnoremap tn gt
nnoremap tp gT

" Quit normal mode
nnoremap <Space>q  :q<CR>
nnoremap <Space>Q  :qa!<CR>

" intellij built in key map
nnoremap <leader>a :action GotoAction<CR>
nnoremap <leader>b :action Bookmarks<CR>
nnoremap <leader>c :action GotoClass<CR>
nnoremap <leader>e :action SearchEverywhere<CR>
nnoremap <leader>f :action FindInPath<CR>
nnoremap <leader>gc :action Git.CompareWithBranch<CR>
nnoremap <leader>gr :action Git.ResolveConflicts<CR>
nnoremap <leader>ga :action Annotate<CR>
nnoremap <leader>or :action FileMenu<CR>
nnoremap <leader>r :action RecentFiles<CR>

" window operation
let g:WitchKeyDesc_NextWindow = "<leader>wn NextWindow"
noremap <leader>wn :action NextWindow<CR>
let g:WitchKeyDesc_PreviousWindow "<leader>wp PreviousWindow"
noremap <leader>wp :action PreviousWindow<CR>

" navigation
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gb :action JumpToLastChange<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gr :action RenameElement<CR>


" code actions
noemap U :action FindUsages<CR>
nnoremap R :action RenameElement<CR>
nnoremap == :action ReformatCode<CR>
vnoremap = :action ReformatCode<CR>
nnoremap cc :action CommentByLineComment<CR>
vnoremap cc :action CommentByLineComment<CR>


